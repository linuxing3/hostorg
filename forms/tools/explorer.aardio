import fonts.fontAwesome;
import console;
import preg;
import win.ui;
import win.ui.tabs;
import win.ui.grid;
import win.ui.explorer;
/*DSG{{*/
var winform = win.form(text="资源管理器树形目录";right=1135;bottom=661)
winform.add(
btnSave={cls="button";text="保存";left=1072;top=305;right=1122;bottom=342;z=12};
buttonExport={cls="button";text="打印";left=1073;top=252;right=1123;bottom=289;z=8};
buttonNext={cls="button";text=">";left=1071;top=192;right=1121;bottom=229;z=5};
buttonPrevious={cls="button";text="<";left=1072;top=139;right=1122;bottom=176;z=6};
combobox={cls="combobox";left=800;top=617;right=1006;bottom=640;edge=1;items={};mode="dropdown";z=11};
edit2={cls="edit";text="文件路径";left=116;top=614;right=543;bottom=641;edge=1;multiline=1;z=2};
editDefaultDir={cls="edit";text="起始目录";left=32;top=15;right=548;bottom=42;edge=1;multiline=1;z=3};
lvRowData={cls="listview";left=336;top=59;right=1057;bottom=598;font=LOGFONT(h=-16);z=4};
static2={cls="static";text="数据";left=34;top=616;right=112;bottom=637;transparent=1;z=9};
static3={cls="static";text="模板";left=683;top=619;right=747;bottom=643;transparent=1;z=10};
staticId={cls="static";text="2";left=963;top=20;right=1051;bottom=51;align="center";color=255;font=LOGFONT(h=-16);transparent=1;z=7};
treeview={cls="treeview";left=28;top=58;right=318;bottom=599;asel=false;bgcolor=16777215;z=1}
)
/*}}*/

// sqlite 
import db;
db.tablename="document"
db.setDb("")
var ds = db.getDb();
console.log(ds);

// 默认路径
//------------------------------------
var defaultDir = "D:\Dropbox\Documents\模板\使用中"; 
// 目录选择器
import fsys.dlg;
var selectedDir = fsys.dlg.opendir(,winform);
// console.varDump(selectedDir);
if(seletedDir != null){
	winform.editDefaultDir.text = selectedDir;
} else {
	winform.editDefaultDir.text = defaultDir;
}

//创建数据视图
//------------------------------------
// set columns
winform.lvRowData.insertColumn("Id",100) 
winform.lvRowData.insertColumn("列标题",100) 
winform.lvRowData.insertColumn("内容",400) 
var grid = win.ui.grid(winform.lvRowData);
grid.readonlyColums = { [1] = true, [2] = true  };//设置禁止编辑的列


// 菜单
//------------------------------------
var menuFile = win.ui.popmenu(winform);//创建弹出菜单
menuFile.add(
	"打开",
	function(id){
			winform.msgbox("打开文件")
	} 
) 

//------------------------------------
var menuHelp = win.ui.popmenu(winform);//创建弹出菜单
menuHelp.add(
	"关于",
	function(id){
			winform.msgbox("关于")
	} 
)
menuHelp.add(); //添加分隔线

menuHelp.addTable( {
	{ "帮助";
		function(id){
			winform.msgbox("帮助")
		} 
	};
	{ /*---分隔线---*/ };
	{ "退出";
		function(id){
			winform.close()
		} 
	};
} )
var menuDb = win.ui.popmenu(winform);//创建弹出菜单
menuDb.addTable( {
	{ "加载";
		function(id){
			winform.msgbox("加载")
		} 
	};
	{ /*---分隔线---*/ };
	{ "关闭";
		function(id){
			winform.msgbox("关闭")
		} 
	};
} )

var menu = win.ui.menu(winform);//创建主菜单
menu.add('文件',menuFile) 
menu.add('数据库',menuDb)
menu.add('帮助',menuHelp) 

// 浏览器设置
//------------------------------------
var explorer = win.ui.explorer( winform.treeview );
explorer.loadFile(winform.editDefaultDir.text, "*.xlsm?")


// 模板选择器
//------------------------------------
var loadTemplates = function(){
    import fsys
	var docTemplateList = {}
	fsys.enum( winform.editDefaultDir.text, //指定要遍历的目录
				"*.docx", //指定查询文件名,支持windows掩码
				function(dir,filename,fullpath,findData){ //指定触发器
					if(filename){ 
           				..table.push(docTemplateList, filename)
					}
					else{
						console.log("发现目录：",dir)
					}
				},
				false 
		  	); 	
	return docTemplateList;
}
winform.combobox.items = loadTemplates();


// 数据源操作
// 获取exce中的数据
//------------------------------------
var getRowData = function(filePath, sheetName, row, fieldCount){
	//com.excel库范例
	import com.excel; 
	var excel;
	try { 
		excel = com.excel() 
	}
	if( !excel ) error("该示例需要安装EXCEL",2)
	
	//excel.Visible = true; //使Excel窗口可见
	excel.alerts = false; //关闭所有操作提示
	
	var book = excel.Open(filePath) //创建工作簿
	var sheet = excel.ActiveWorkbook.Sheets(sheetName);
	
	// 检查列数
	if (sheet.UsedRange.Columns.count != fieldCount) {
		fieldCount = sheet.UsedRange.Columns.count;
	}
	var rowData = {};
	for column=1;fieldCount begin
		if(sheet.Cells(1, column).Value != null){
  			..table.push(rowData, {
  				fieldName=sheet.Cells(1, column).Value,
  				text=sheet.Cells(row, column).Value
  			})
  			// 创建sqlite数据库中的表
  			..table.push(db.fields, sheet.Cells(1, column).Value)
  			console.log(db.fields[column]);
		}
	end

	// 创建sqlite数据库中的表	
	db.deleteDb();
	db.createDb();
	
	excel.Quit(); //退出
	return rowData;
}

var saveRowData = function(filePath, sheetName){
	//com.excel库范例
	import com.excel; 
	var excel;
	try { 
		excel = com.excel() 
	}
	if( !excel ) error("该示例需要安装EXCEL",2)
	
	// excel.Visible = true; //使Excel窗口可见
	// excel.alerts = true; //关闭所有操作提示
	
	var book = excel.Open(filePath) //创建工作簿
	var sheet = excel.ActiveWorkbook.Sheets(sheetName);
	console.log("试算表名称:"+ sheet.Name);
	
	for(k,item in winform.lvRowData.items){
		if(item[2]!= null){
			// 打开excel时为只读
			// sheet.Cells(winform.staticId.text, k+1).SetValue2(item[3])
			console.log(sheet.Cells(winform.staticId.text, k+1).Value);
		}
	}
	// excel.Quit(); //退出
}

// 显示某一行数据到listview中
//------------------------------------
var showRowData = function() {
    // 导入excel数据

    var data = getRowData(winform.edit2.text, "table", winform.staticId.text, 12);
    // console.varDump(data);
    // winform.lvRowData.setTable(data);
    winform.lvRowData.clear();
    for(k,v in data){
    	//import console
    	//console.varDump(v)
    	if(v["fieldName"] != ""){
			winform.lvRowData.addItem({ 
				text={k;v["fieldName"];v["text"]};
			})    		
    	}
	}
}

// 模板打印操作
//------------------------------------
var exportWord = function() {
	import com;
	word = com.CreateObject("Word.Application"); 
	//com.DumpTypeInfo(word); //输出所有成员
	word.visible = true;
	doc = word.Documents.Open(defaultDir + "\" + winform.combobox.text);
	
	/*
	* row = {id, "name", "aardio"}
	*/
	for (k, row in winform.lvRowData.items) {
		if(row[3] != null){	
			if(doc.Bookmarks(row[2]) != null){
				//console.log("有此书签！" + row[2]);
				//console.log("写入内容！" + row[3]);
				//console.varDump(doc.Bookmarks(row[2]).Range);
				doc.Bookmarks(row[2]).Range.InsertAfter(row[3]);
			} else {
				console.log("无此书签！" + row[2]);
			}
		}
	}
	
}

// 事件和动作

//用户鼠标右键点击节点
//------------------------------------
import process;
import win.ui.menu;

explorer.onDoubleClick = function(filePath,hItem){
    winform.edit2.text = filePath;
    showRowData();
}

explorer.onRightClick = function(filePath,hItem,x,y){
    var hItem,tvht = winform.treeview.hitTest(x,y,true);
    var menu = win.ui.popmenu(winform)
    menu.add("浏览...",
        function(){
            process.explore_select(filePath)
        }
    )
    menu.add("打开...",
        function(){
     		process.explore_select(filePath)       
        }
    )
    menu.popup(x,y,true);   
}

winform.lvRowData.onnotify = function(id,code,ptr){
	 if(code = 0xFFFFFF97/*_LVN_BEGINLABELEDIT*/ ){ 
	 	return false; //允许编辑项
	 }
	 if( code == 0xFFFFFF50/*_LVN_ENDLABELEDITW*/ ){
	 	var dispInfo = winform.listview.getNotifyDispInfo(code,ptr); 
	 	if( dispInfo ? dispInfo.item.text ) {
	 		winform.listview.setItemText( dispInfo.item.text, dispInfo.item.iItem,dispInfo.item.iSubItem );
	 	}
	 }
}

// 功能按钮
//------------------------------------
winform.buttonPrevious.oncommand = function(id,event){
	winform.staticId.text = winform.staticId.text - 1;
	showRowData();
}

winform.buttonNext.oncommand = function(id,event){
	winform.staticId.text = winform.staticId.text + 1;
	showRowData();	
}

winform.buttonExport.oncommand = function(id,event){
	exportWord();
}

winform.btnSave.oncommand = function(id,event){
	saveRowData(winform.edit2.text, "table");
}

winform.show() 
win.loopMessage();